// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  INSTRUCTOR
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("STUDENT")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  questions Question[]
  answers   Answer[]

  @@map("users")
}

model Question {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  content   String
  authorId  String @map("author_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  bestAnswerId String? @unique @map("best_answer_id")

  author    User     @relation(fields: [authorId], references: [id])
  bestAnswer Answer? @relation("bestAnswer", fields: [bestAnswerId], references: [id])

  answers    Answer[]

  @@map("questions")
}

model Answer {
  id        String   @id @default(cuid())
  content   String
  authorId  String @map("author_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  questionId String @map("question_id")

  author    User     @relation(fields: [authorId], references: [id])
  bestAnswerOn Question? @relation("bestAnswer")
  question  Question @relation(fields: [questionId], references: [id])

  @@map("answers")
}

// model Attachment {

// }